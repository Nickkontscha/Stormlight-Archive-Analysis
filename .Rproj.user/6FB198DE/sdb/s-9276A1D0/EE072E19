{
    "collab_server" : "",
    "contents" : "\nlibrary(tidyr)\nlibrary(tidytext)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemr)\nlibrary(gridExtra)\nlibrary(stringr)\nggthemr('fresh', layout = \"minimal\")\n\nsource(\"loadData/loadData.R\")\n\nAllBooks <- AllBooks[, c(\"chapter\", \"nr\", \"text\", \"character\", \"book\", \"flashback\")]\nAllBooks <- AllBooks[!is.na(AllBooks$nr),]\n\nrm(list=setdiff(ls(), \"AllBooks\"))\n\nrelChars <- c(\"Kaladin\", \"Shallan Davar\", \"Dalinar Kholin\")\nstopwords <- c(stop_words$word, \"kaladin\", \"dalinar\", \"shallan\", \"kal\", \"kals\", \"kaladins\", \"dalinars\", \"shallans\")\nstopwords <- c(stopwords, gsub(\"[^[:alnum:][:space:]]\", \"\", stopwords))\n\n\nidf_smooth <- function(idf){\n  idf <- log(1 + 2^(idf), base = 2)\n  return(idf)\n}\nidf_prob <- function(idf){\n  idf <- log(2^(idf) - 1, base = 2)\n  return(idf)\n}\ntf_aug <- function(n){\n  tf <- 0.5+0.5*n/max(n)\n  return(tf)\n}\ntf_bool <- function(n){\n  tf <- ifelse(n > 0, 1, 0)\n  return(tf)\n}\n##\n\nchars <- AllBooks %>% \n  select(character, flashback, book) %>% \n  group_by(character, book) %>% \n  count(flashback) %>% \n  ungroup() %>% \n  arrange(flashback, desc(n)) %>% \n  filter(character %in% relChars)\n\nchars$character <- factor(chars$character, levels = relChars)\n\nggplot(chars, aes( x = character, y = n, fill = flashback)) +\n  geom_bar(stat = \"identity\", position = position_stack(reverse = TRUE)) +\n  facet_wrap(~book) +\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(7,2)]) +\n  ggtitle(\"Number of Chapters of Each Character Ordered by Books\") +\n  labs(x = NULL,\n       y = \"Number of chapters\",\n       fill = \"Flashback\")\n# Man sieht gut, Ã¼ber wen es in diesem Buch geht\n\nbook_words_tokens <- AllBooks %>% \n  select(book, text) %>% \n  unnest_tokens(word, text) %>% \n  count(book, word, sort = TRUE) %>% \n  ungroup() %>% \n  filter(!word %in% stopwords) %>% \n  filter(n > 10)\n\nbook_words_ngrams <- AllBooks %>% \n  select(book, text) %>% \n  unnest_tokens(word, text, token = \"skip_ngrams\", n = 2, k = 2) %>% \n  filter(str_count(word, \"\\\\w+\")  == 2) %>% \n  separate(word, c(\"word1\", \"word2\"), sep = \" \") %>% \n  filter(!word1 %in% stopwords) %>%\n  filter(!word2 %in% stopwords) %>% \n  unite(word, word1, word2, sep = \" \") %>% \n  count(book, word, sort = TRUE) %>% \n  ungroup() %>% \n  filter(n > 10)\n\n\nplot_book_words_tokens <- book_words_tokens %>% \n  group_by(book) %>%\n  top_n(25, n) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", book, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering))\n\nplot_book_words_ngrams <- book_words_ngrams %>% \n  group_by(book) %>%\n  top_n(25, n) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", book, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering))\n\nb1 <- ggplot(plot_book_words_tokens, aes(reorder(ordering, n), n, fill = book)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~book, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_book_words_tokens$ordering,\n                   labels = plot_book_words_tokens$word) +\n  scale_y_continuous(limits = c(0, 2500), \n                     labels = c(0, rep(\"\",1), 500, rep(\"\",1), 1000, rep(\"\",1), 1500, rep(\"\",1), 2000, rep(\"\",1), 2500),\n                     breaks= seq(0, 2500, by = 250)) + \n  labs( y = \"Frequency\",\n        x = NULL) +\n  coord_flip() +\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)]) +\n  ggtitle(\"Most Frequent Terms in the Stormlight Archieve Ordered by Book\")\n\nb2 <- ggplot(plot_book_words_ngrams, aes(reorder(ordering, n), n, fill = book)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~book, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_book_words_ngrams$ordering,\n                   labels = plot_book_words_ngrams$word) +\n  scale_y_continuous(limits = c(0, 260), \n                     labels = c(0, rep(\"\",1), 50, rep(\"\",1), 100, rep(\"\",1), 150, rep(\"\",1), 200, rep(\"\",1), 250),\n                     breaks= seq(0, 250, by = 25)) + \n  labs( y = \"Frequency\",\n        x = NULL) +\n  coord_flip() +\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)])\n# Ich habe die Namen nicht entfernt, weil man hier wieder sieht, um wem es in dem Buch mehr geht\n# Buch 1 wenig Shallan und Oathbringer viel Dalinar\n# Man sieht die Themen:\n# WoK: Bridge, Sadeas, Soldiers, Army\n# Oathbringer: Fused, eyes, red, Odium\n\n# Same with TFIDF\nplot_book_words_tokens_tfidf <- book_words_tokens %>% \n  group_by(book) %>%\n  bind_tf_idf(word, book, n) %>% \n  top_n(20, tf_idf) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", book, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering)) %>% \n  mutate(idf = idf_smooth(idf)) %>% \n  mutate(tf_idf = tf*idf)\n\nplot_book_words_ngrams_tfidf <- book_words_ngrams %>% \n  group_by(book) %>%\n  bind_tf_idf(word, book, n) %>% \n  top_n(20, tf_idf) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", book, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering)) %>% \n  mutate(idf = idf_smooth(idf)) %>%  \n  mutate(tf_idf = tf*idf)\n\nb1_tfidf <- ggplot(plot_book_words_tokens_tfidf, aes(reorder(ordering, tf_idf), tf_idf, fill = book)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~book, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_book_words_tokens_tfidf$ordering,\n                   labels = plot_book_words_tokens_tfidf$word) +\n  scale_y_continuous(labels = function(x) x*1000) +\n  labs( y = \"scaled tf-idf value\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)]) +\n  ggtitle(\"Most Important Terms in the Stormlight Archieve Ordered by Books\") \n\nb2_tfidf <- ggplot(plot_book_words_ngrams_tfidf, aes(reorder(ordering, tf_idf), tf_idf, fill = book)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~book, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_book_words_ngrams_tfidf$ordering,\n                   labels = plot_book_words_ngrams_tfidf$word) +\n  scale_y_continuous(labels = function(x) x*100) +\n  labs( y = \"scaled tf-idf value\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)]) \n# WoK: Apothecary as WoK is about Kaladin and his Past\n# Many Brightlords as they are at their camps\n\n#\n## Characters\n#\n\nchar_words_tokens <- AllBooks %>% \n  select(character, text) %>% \n  filter(character %in% relChars) %>% \n  unnest_tokens(word, text) %>% \n  count(character, word, sort = TRUE) %>% \n  ungroup() %>% \n  filter(!word %in% stopwords)%>% \n  filter(n > 10)\n\nchar_words_ngrams <- AllBooks %>% \n  select(character, text) %>%  \n  filter(character %in% relChars) %>% \n  unnest_tokens(word, text, token = \"skip_ngrams\", n = 2, k = 2) %>% \n  filter(str_count(word, \"\\\\w+\")  == 2) %>% \n  separate(word, c(\"word1\", \"word2\"), sep = \" \") %>% \n  filter(!word1 %in% stopwords) %>%\n  filter(!word2 %in% stopwords) %>% \n  unite(word, word1, word2, sep = \" \") %>% \n  count(character, word, sort = TRUE) %>% \n  ungroup() %>% \n  filter(n > 10)\n\nchar_words_tokens$character <- factor(char_words_tokens$character, levels = relChars)\nchar_words_ngrams$character <- factor(char_words_ngrams$character, levels = relChars)\n\n\nplot_char_words_tokens <- char_words_tokens %>% \n  group_by(character) %>%\n  top_n(25, n) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", character, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering))\n\nplot_char_words_ngrams <- char_words_ngrams %>% \n  group_by(character) %>%\n  top_n(25, n) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", character, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering))\n\nc1 <- ggplot(plot_char_words_tokens, aes(reorder(ordering, n), n, fill = character)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~character, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_char_words_tokens$ordering,\n                   labels = plot_char_words_tokens$word) +\n  scale_y_continuous(limits = c(0, 1250), \n                     labels = c(0, rep(\"\",1), 300, rep(\"\",1), 600, rep(\"\",1), 900, rep(\"\",1), 1200),\n                     breaks= seq(0, 1200, by = 150)) + \n  labs( y = \"Frequency\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)]) +\n  ggtitle(\"Most Frequent Terms in the Stormlight Archieve Ordered by Characters\")\n\nc2 <- ggplot(plot_char_words_ngrams, aes(reorder(ordering, n), n, fill = character)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~character, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_char_words_ngrams$ordering,\n                   labels = plot_char_words_ngrams$word) +\n  scale_y_continuous(limits = c(0, 135), \n                     labels = c(0, rep(\"\",1), 30, rep(\"\",1), 60, rep(\"\",1), 90, rep(\"\",1), 120),\n                     breaks= seq(0, 120, by = 15)) + \n  labs( y = \"Frequency\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)])\n\n# Same with TFIDF\nplot_char_words_tokens_tfidf <- char_words_tokens %>% \n  group_by(character) %>%\n  bind_tf_idf(word, character, n) %>% \n  top_n(20, tf_idf) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", character, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering)) %>% \n  mutate(idf = idf_smooth(idf)) %>%  \n  mutate(tf_idf = tf*idf)\n\nplot_char_words_ngrams_tfidf <- char_words_ngrams %>% \n  group_by(character) %>%\n  bind_tf_idf(word, character, n) %>% \n  top_n(20, tf_idf) %>% \n  mutate(index = seq(1, length(n), 1)) %>% \n  unite(\"ordering\", character, index, sep = \"_\", remove = FALSE) %>% \n  data.frame() %>% \n  mutate(ordering = factor(ordering, levels = ordering)) %>% \n  mutate(idf = idf_smooth(idf)) %>%  \n  mutate(tf_idf = tf*idf)\n\nc1_tfidf <- ggplot(plot_char_words_tokens_tfidf, aes(reorder(ordering, tf_idf), tf_idf, fill = character)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~character, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_char_words_tokens_tfidf$ordering,\n                   labels = plot_char_words_tokens_tfidf$word) +\n  scale_y_continuous(labels = function(x) x*1000) +\n  labs( y = \"scaled tf-idf value\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)]) +\n  ggtitle(\"Most Important Terms in the Stormlight Archieve Ordered by Characters\")\n\nc2_tfidf <- ggplot(plot_char_words_ngrams_tfidf, aes(reorder(ordering, tf_idf), tf_idf, fill = character)) +\n  geom_col(show.legend = FALSE, width = 0.8) +\n  facet_wrap(~character, scales = \"free\", drop = TRUE) +\n  scale_x_discrete(breaks = plot_char_words_ngrams_tfidf$ordering,\n                   labels = plot_char_words_ngrams_tfidf$word) +\n  scale_y_continuous(labels = function(x) x*100) +\n  labs( y = \"scaled tf-idf value\",\n        x = NULL) +\n  coord_flip()+\n  theme(panel.background = element_rect(fill = \"#ecf0f1\")) + \n  scale_fill_manual(values = swatch()[c(3, 7, 2)])\n\n\ngA <- ggplotGrob(b1)\ngB <- ggplotGrob(b2)\ngrid::grid.newpage()\ngrid::grid.draw(rbind(gA, gB))\n# By looking at the Word frequency, one can already guess what the book is about. \n# Looking at the terms with two words, it becomes even more clearer.\n# One can definetly see that WoK and WoR are taking place in the shatted plains, while Oathbringer is being less centered.\n# Other things are evolving, too. WoK is mainly about the bridge crews with Kaladin being the \"main\" character.\n# And an important take away is that people surely nod and shake their heads a lot while taking deep breaths with wide eyes.\n\ngA <- ggplotGrob(b1_tfidf)\ngB <- ggplotGrob(b2_tfidf)\ngrid::grid.newpage()\ngrid::grid.draw(rbind(gA, gB))\n# One can see the influence of TFIDF: Common terms like \"shook head\" are removed.\n# Another symptom of the influence is that it isolates topics which emerge in one book only\n# and about new characters appearing in the different books. Noteable examples are \"Kabsal and Jam\", a lot of bridges and\n# some minor lighteyes/highprinces which take a role in the politics of the shattered plains.\n# For WoR, one can observe new characters appearing like Eshonai, Zahel and Sebarial.\n# I find Oathbringer to be the most interesting. One can see how the setting changes a lot. \n# Words about the shattered plains like bridge crews/runs or plateaus disappear completely. \n# The threat of the book is very dominant with the Fused, Odium and the color red which gets associated with them.\n\ngA <- ggplotGrob(c1)\ngB <- ggplotGrob(c2)\ngrid::grid.newpage()\ngrid::grid.draw(rbind(gA, gB))\n# By looking at the frequencies, one can see which character is associateing with which group of people and what their main activities are.\n\ngA <- ggplotGrob(c1_tfidf)\ngB <- ggplotGrob(c2_tfidf)\ngrid::grid.newpage()\ngrid::grid.draw(rbind(gA, gB))\n# Characters like Adolin, Jasnah, Navani were very prominent when sorting by Frequency\n# When looking at the tfidf values, one can see more closely related people to the given characters in particular about characters from their past\n# Family members and their spren are very prominant\n# mmmm pattern is my favourite!\n\n\n# Schwierigkeiten:\n# Es war schwierig die y-Achsen aller Graphen ordentlich Ã¼bereinander anzuordnen.\n",
    "created" : 1536432117877.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "366380605",
    "id" : "EE072E19",
    "lastKnownWriteTime" : 1536490311,
    "last_content_update" : 1536490311988,
    "path" : "C:/Users/swesd/Desktop/NLP/SA_nlp/Exploration.R",
    "project_path" : "Exploration.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}