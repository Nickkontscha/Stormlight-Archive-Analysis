"0","# This code has a lot of lines as everything needs to be done for each book"
"0","# Transform the text a bit to make it easier to handle. "
"0","# Change nicknames of characters to their normal names"
"0","AllBooks$text <- tolower(AllBooks$text)"
"0","AllBooks$text <- paste("" "", AllBooks$text)"
"0","AllBooks$text <- gsub(""(\\skaladins\\s|\\skal\\s|\\skals\\s)"", "" kaladin "", AllBooks$text)"
"0","AllBooks$text <- gsub(""(\\sshallans\\s)"", "" shallan "", AllBooks$text)"
"0","AllBooks$text <- gsub(""(\\sdalinars\\s)"", "" dalinar "", AllBooks$text)"
"0","stopwords <- unique(stop_words$word)"
"0","stopwords <- c(stopwords, gsub(""[^[:alnum:][:space:]]"", """", stopwords))"
"0","stopwords <- unique(stopwords)"
"0","# Separate each book"
"0","WoK <- AllBooks[AllBooks$book == ""Way Of Kings"", c(""nr"", ""text"")]"
"0","WoR <- AllBooks[AllBooks$book == ""Words Of Radiance"", c(""nr"", ""text"")]"
"0","Oath <- AllBooks[AllBooks$book == ""Oathbringer"", c(""nr"", ""text"")]"
"0","# Create index variable"
"0","WoK$index <- seq(1, nrow(WoK), 1)"
"0","WoR$index <- seq(1, nrow(WoR), 1)"
"0","Oath$index <- seq(1, nrow(Oath), 1)"
"0","# Tokenize the text and count them"
"0","# Keep relChars only"
"0","relChars <- c(""kaladin"", ""shallan"", ""dalinar"")"
"0","WoK_tokens <- WoK %>% "
"0","  select(text, index) %>% "
"0","  unnest_tokens(word, text) %>% "
"0","  mutate(word = SnowballC::wordStem(word, language = ""english"")) %>% "
"0","  count(index, word, sort = TRUE) %>% "
"0","  ungroup() %>% "
"0","  filter(word %in% relChars) %>% "
"0","  arrange(index)"
"0","WoR_tokens <- WoR %>% "
"0","  select(text, index) %>% "
"0","  unnest_tokens(word, text) %>% "
"0","  mutate(word = SnowballC::wordStem(word, language = ""english"")) %>% "
"0","  count(index, word, sort = TRUE) %>% "
"0","  ungroup() %>% "
"0","  filter(word %in% relChars) %>% "
"0","  arrange(index)"
"0","Oath_tokens <- Oath %>% "
"0","  select(text, index) %>% "
"0","  unnest_tokens(word, text) %>% "
"0","  mutate(word = SnowballC::wordStem(word, language = ""english"")) %>% "
"0","  count(index, word, sort = TRUE) %>% "
"0","  ungroup() %>% "
"0","  filter(word %in% relChars) %>% "
"0","  arrange(index)"
"0","# Capitalization "
"0","WoK_tokens$word <- gsub(""kaladin"", ""Kaladin"", WoK_tokens$word)"
"0","WoK_tokens$word <- gsub(""shallan"", ""Shallan"", WoK_tokens$word)"
"0","WoK_tokens$word <- gsub(""dalinar"", ""Dalinar"", WoK_tokens$word)"
"0","WoR_tokens$word <- gsub(""kaladin"", ""Kaladin"", WoR_tokens$word)"
"0","WoR_tokens$word <- gsub(""shallan"", ""Shallan"", WoR_tokens$word)"
"0","WoR_tokens$word <- gsub(""dalinar"", ""Dalinar"", WoR_tokens$word)"
"0","Oath_tokens$word <- gsub(""kaladin"", ""Kaladin"", Oath_tokens$word)"
"0","Oath_tokens$word <- gsub(""shallan"", ""Shallan"", Oath_tokens$word)"
"0","Oath_tokens$word <- gsub(""dalinar"", ""Dalinar"", Oath_tokens$word)"
"0","# Faktor fixes the ordering in their plots"
"0","WoK_tokens$word <- factor(WoK_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","WoR_tokens$word <- factor(WoR_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","Oath_tokens$word <- factor(Oath_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","# I want to calculate the percentage of appearances of each character in each chapter"
"0","WoK_tokens <- spread(WoK_tokens, key = word, value = n) %>% "
"0","  replace_na(list(Kaladin = 0, Shallan = 0, Dalinar = 0)) %>% "
"0","  gather(word, n, -index)"
"0","WoR_tokens <- spread(WoR_tokens, key = word, value = n) %>% "
"0","  replace_na(list(Kaladin = 0, Shallan = 0, Dalinar = 0)) %>% "
"0","  gather(word, n, -index)"
"0","Oath_tokens <- spread(Oath_tokens, key = word, value = n) %>% "
"0","  replace_na(list(Kaladin = 0, Shallan = 0, Dalinar = 0)) %>% "
"0","  gather(word, n, -index)"
"0","# Calc proportion"
"0","WoK_fun = function(vec){ as.numeric(vec[3]) / sum(WoK_tokens$n[ WoK_tokens$index == as.numeric(vec[1]) ]) *100 }"
"0","WoR_fun = function(vec){ as.numeric(vec[3]) / sum(WoR_tokens$n[ WoR_tokens$index == as.numeric(vec[1]) ]) *100 }"
"0","Oath_fun = function(vec){ as.numeric(vec[3]) / sum(Oath_tokens$n[ Oath_tokens$index == as.numeric(vec[1]) ]) *100 }"
"0","WoK_tokens$prop = apply(WoK_tokens , 1 , WoK_fun)"
"0","WoR_tokens$prop = apply(WoR_tokens , 1 , WoR_fun)"
"0","Oath_tokens$prop = apply(Oath_tokens , 1 , Oath_fun)"
"0","WoK_tokens$word <- factor(WoK_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","WoR_tokens$word <- factor(WoR_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","Oath_tokens$word <- factor(Oath_tokens$word, levels = c(""Kaladin"", ""Shallan"", ""Dalinar""))"
"0","# Plots"
"0","prop_wok <- ggplot(WoK_tokens, aes(x = index, y = prop, fill = word)) + "
"0","  geom_area(alpha=0.6 , size=.5, colour=""black"")+"
"0","  labs( x = "" "","
"0","        y = ""Percentage"") + "
"0","  theme(legend.position = ""top"","
"0","      legend.margin=margin(t = 0, unit='cm'),"
"0","      legend.text = element_text(color = ""white""),"
"0","      legend.title = element_text(color = ""white""),"
"0","      legend.key = element_rect(fill = ""white""))  + "
"0","  scale_fill_manual(values = swatch()[c(2, 4, 9)],"
"0","                    guide = guide_legend(override.aes = list(fill = ""white"","
"0","                                         color = ""white""))"
"0","                    )"
"0","prop_wor <- ggplot(WoR_tokens, aes(x = index, y = prop, fill = word)) + "
"0","  geom_area(alpha=0.6 , size=.5, colour=""black"") +"
"0","  labs( x = ""Chapter"","
"0","        y = """","
"0","        fill = """") + "
"0","  theme(legend.position = ""top"","
"0","        legend.margin=margin(t = 0, unit='cm')) +"
"0","  scale_fill_manual(values = swatch()[c(2, 4, 9)]"
"0","                    )"
"0","prop_oath <- ggplot(Oath_tokens, aes(x = index, y = prop, fill = word)) + "
"0","  geom_area(alpha=0.6 , size=.5, colour=""black"") +"
"0","  labs( x = "" "","
"0","        y = "" "")  +"
"0","  theme(legend.position = ""top"","
"0","        legend.margin=margin(t = 0, unit='cm'),"
"0","        legend.text = element_text(color = ""white""),"
"0","        legend.title = element_text(color = ""white""),"
"0","        legend.key = element_rect(fill = ""white"")) + "
"0","  scale_fill_manual(values = swatch()[c(2, 4, 9)],"
"0","                    guide = guide_legend(override.aes = list(fill = ""white"","
"0","                                                             color = ""white""))"
"0","                    )"
"0","library(grid)"
"0","grid.arrange(prop_wok, prop_wor, prop_oath, ncol = 3,"
"0","             top = textGrob(""Percentage of How Often a Character Is Mentioned in Each Chapter"",gp=gpar(fontsize=18,font=3)))"
